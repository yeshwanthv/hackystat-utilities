<project name="findbugs" default="findbugs">
  <description>
  Provides the FindBugs tool and the Hackystat FindBugs sensor.
  </description>

  <import file="build.xml"/>
  <property environment="env"/>
  <property name="findbugs.dir" location="${build.dir}/findbugs" />

  <target name="findbugs" depends="findbugs.tool, findbugs.report" 
    description="Runs the FindBugs tool, report, and sensor."/>

  <target name="findbugs.tool" depends="compile" description="Runs FindBugs over the byte code to check for problems.">
    <!-- Fail this target if FindBugs is not installed. -->
    <available file="${env.FINDBUGS_HOME}/lib/findbugs.jar" property="findbugs.available"/>
    <fail unless="findbugs.available" message="Error: FINDBUGS_HOME not set or findbugs.jar not found."/>
    <taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask"  classpath="${env.FINDBUGS_HOME}/lib/findbugs-ant.jar" />

    <!-- Run FindBugs. -->
    <mkdir dir="${findbugs.dir}"/>
    <findbugs 
        home="${env.FINDBUGS_HOME}"
        failOnError="${findbugs.failOnError}"
        warningsProperty="findbugs.warningsfound"
        output="xml:withMessages" 
        outputFile="${findbugs.dir}/findbugs.xml" 
        excludeFilter="${basedir}/lib/findbugs/hackystat.findbugs.exclude.xml"
      >
      <auxClasspath>
        <path refid="compile.classpath"/>
      </auxClasspath>
      <sourcePath>
        <fileset dir="${src.dir}">
          <include name="**/*.java"/>
        </fileset>
      </sourcePath>
      <class location="${build.dir}/classes" />
    </findbugs>
  </target>

  <target name="findbugs.report" description="Generate an HTML report on FindBugs.">
    <xslt in="${findbugs.dir}/findbugs.xml" 
          style="${env.FINDBUGS_HOME}/src/xsl/default.xsl" 
          out="${findbugs.dir}/findbugs-default.html" />
  </target>

  <target name="findbugs.sensor" description="Sends CodeIssue data to Hackystat using the Findbugs sensor.">
    <!-- Define the findbugs sensor taskdef, failing the build if the sensor is not installed. -->
    <available classname="org.hackystat.sensor.findbugs.FindBugsSensor" property="findbugs.sensor.available"/>
    <fail unless="findbugs.sensor.available" message="Error: Findbugs sensor not installed."/>
    <taskdef name="hacky-findbugs" classname="org.hackystat.sensor.findbugs.FindBugsSensor" />
    
    <!-- Send the code issue information to the hackystat server. -->
    <hacky-findbugs verbose="${hackystat.verbose.mode}">
      <fileset file="${findbugs.dir}/findbugs.xml"/>
    </hacky-findbugs>
  </target>

</project>



